/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod/v3";
import { safeParse } from "../lib/schemas.js";
import { Result as SafeParseResult } from "../types/fp.js";
import { SDKValidationError } from "./errors/sdkvalidationerror.js";

export type DefaultErrorDTO = {
  statusCode: number;
  message: string;
};

/** @internal */
export const DefaultErrorDTO$inboundSchema: z.ZodType<
  DefaultErrorDTO,
  z.ZodTypeDef,
  unknown
> = z.object({
  statusCode: z.number(),
  message: z.string(),
});

/** @internal */
export type DefaultErrorDTO$Outbound = {
  statusCode: number;
  message: string;
};

/** @internal */
export const DefaultErrorDTO$outboundSchema: z.ZodType<
  DefaultErrorDTO$Outbound,
  z.ZodTypeDef,
  DefaultErrorDTO
> = z.object({
  statusCode: z.number(),
  message: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace DefaultErrorDTO$ {
  /** @deprecated use `DefaultErrorDTO$inboundSchema` instead. */
  export const inboundSchema = DefaultErrorDTO$inboundSchema;
  /** @deprecated use `DefaultErrorDTO$outboundSchema` instead. */
  export const outboundSchema = DefaultErrorDTO$outboundSchema;
  /** @deprecated use `DefaultErrorDTO$Outbound` instead. */
  export type Outbound = DefaultErrorDTO$Outbound;
}

export function defaultErrorDTOToJSON(
  defaultErrorDTO: DefaultErrorDTO,
): string {
  return JSON.stringify(DefaultErrorDTO$outboundSchema.parse(defaultErrorDTO));
}

export function defaultErrorDTOFromJSON(
  jsonString: string,
): SafeParseResult<DefaultErrorDTO, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) => DefaultErrorDTO$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'DefaultErrorDTO' from JSON`,
  );
}
