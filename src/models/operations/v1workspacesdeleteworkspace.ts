/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type V1WorkspacesDeleteWorkspaceSecurity = {
  oauth2?: models.SchemeOauth2 | undefined;
  bearer?: string | undefined;
};

export type V1WorkspacesDeleteWorkspaceRequest = {
  /**
   * Organization identifier
   */
  organizationId: string;
  /**
   * Workspace identifier
   */
  workspaceId: string;
};

/** @internal */
export const V1WorkspacesDeleteWorkspaceSecurity$inboundSchema: z.ZodType<
  V1WorkspacesDeleteWorkspaceSecurity,
  z.ZodTypeDef,
  unknown
> = z.object({
  oauth2: models.SchemeOauth2$inboundSchema.optional(),
  bearer: z.string().optional(),
});

/** @internal */
export type V1WorkspacesDeleteWorkspaceSecurity$Outbound = {
  oauth2?: models.SchemeOauth2$Outbound | undefined;
  bearer?: string | undefined;
};

/** @internal */
export const V1WorkspacesDeleteWorkspaceSecurity$outboundSchema: z.ZodType<
  V1WorkspacesDeleteWorkspaceSecurity$Outbound,
  z.ZodTypeDef,
  V1WorkspacesDeleteWorkspaceSecurity
> = z.object({
  oauth2: models.SchemeOauth2$outboundSchema.optional(),
  bearer: z.string().optional(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1WorkspacesDeleteWorkspaceSecurity$ {
  /** @deprecated use `V1WorkspacesDeleteWorkspaceSecurity$inboundSchema` instead. */
  export const inboundSchema =
    V1WorkspacesDeleteWorkspaceSecurity$inboundSchema;
  /** @deprecated use `V1WorkspacesDeleteWorkspaceSecurity$outboundSchema` instead. */
  export const outboundSchema =
    V1WorkspacesDeleteWorkspaceSecurity$outboundSchema;
  /** @deprecated use `V1WorkspacesDeleteWorkspaceSecurity$Outbound` instead. */
  export type Outbound = V1WorkspacesDeleteWorkspaceSecurity$Outbound;
}

export function v1WorkspacesDeleteWorkspaceSecurityToJSON(
  v1WorkspacesDeleteWorkspaceSecurity: V1WorkspacesDeleteWorkspaceSecurity,
): string {
  return JSON.stringify(
    V1WorkspacesDeleteWorkspaceSecurity$outboundSchema.parse(
      v1WorkspacesDeleteWorkspaceSecurity,
    ),
  );
}

export function v1WorkspacesDeleteWorkspaceSecurityFromJSON(
  jsonString: string,
): SafeParseResult<V1WorkspacesDeleteWorkspaceSecurity, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      V1WorkspacesDeleteWorkspaceSecurity$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1WorkspacesDeleteWorkspaceSecurity' from JSON`,
  );
}

/** @internal */
export const V1WorkspacesDeleteWorkspaceRequest$inboundSchema: z.ZodType<
  V1WorkspacesDeleteWorkspaceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  organizationId: z.string(),
  workspaceId: z.string(),
});

/** @internal */
export type V1WorkspacesDeleteWorkspaceRequest$Outbound = {
  organizationId: string;
  workspaceId: string;
};

/** @internal */
export const V1WorkspacesDeleteWorkspaceRequest$outboundSchema: z.ZodType<
  V1WorkspacesDeleteWorkspaceRequest$Outbound,
  z.ZodTypeDef,
  V1WorkspacesDeleteWorkspaceRequest
> = z.object({
  organizationId: z.string(),
  workspaceId: z.string(),
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1WorkspacesDeleteWorkspaceRequest$ {
  /** @deprecated use `V1WorkspacesDeleteWorkspaceRequest$inboundSchema` instead. */
  export const inboundSchema = V1WorkspacesDeleteWorkspaceRequest$inboundSchema;
  /** @deprecated use `V1WorkspacesDeleteWorkspaceRequest$outboundSchema` instead. */
  export const outboundSchema =
    V1WorkspacesDeleteWorkspaceRequest$outboundSchema;
  /** @deprecated use `V1WorkspacesDeleteWorkspaceRequest$Outbound` instead. */
  export type Outbound = V1WorkspacesDeleteWorkspaceRequest$Outbound;
}

export function v1WorkspacesDeleteWorkspaceRequestToJSON(
  v1WorkspacesDeleteWorkspaceRequest: V1WorkspacesDeleteWorkspaceRequest,
): string {
  return JSON.stringify(
    V1WorkspacesDeleteWorkspaceRequest$outboundSchema.parse(
      v1WorkspacesDeleteWorkspaceRequest,
    ),
  );
}

export function v1WorkspacesDeleteWorkspaceRequestFromJSON(
  jsonString: string,
): SafeParseResult<V1WorkspacesDeleteWorkspaceRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      V1WorkspacesDeleteWorkspaceRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1WorkspacesDeleteWorkspaceRequest' from JSON`,
  );
}
