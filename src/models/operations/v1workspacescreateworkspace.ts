/*
 * Code generated by Speakeasy (https://speakeasy.com). DO NOT EDIT.
 */

import * as z from "zod";
import { remap as remap$ } from "../../lib/primitives.js";
import { safeParse } from "../../lib/schemas.js";
import { Result as SafeParseResult } from "../../types/fp.js";
import { SDKValidationError } from "../errors/sdkvalidationerror.js";
import * as models from "../index.js";

export type V1WorkspacesCreateWorkspaceRequest = {
  /**
   * The <code>id</code> of the Organization where you want to create the Workspace.
   */
  organizationId: string;
  workspaceCreateRequestDTO: models.WorkspaceCreateRequestDTO;
};

export type V1WorkspacesCreateWorkspaceResponse =
  | models.WorkspaceSchema
  | models.DefaultErrorDTO;

/** @internal */
export const V1WorkspacesCreateWorkspaceRequest$inboundSchema: z.ZodType<
  V1WorkspacesCreateWorkspaceRequest,
  z.ZodTypeDef,
  unknown
> = z.object({
  organizationId: z.string(),
  WorkspaceCreateRequestDTO: models.WorkspaceCreateRequestDTO$inboundSchema,
}).transform((v) => {
  return remap$(v, {
    "WorkspaceCreateRequestDTO": "workspaceCreateRequestDTO",
  });
});

/** @internal */
export type V1WorkspacesCreateWorkspaceRequest$Outbound = {
  organizationId: string;
  WorkspaceCreateRequestDTO: models.WorkspaceCreateRequestDTO$Outbound;
};

/** @internal */
export const V1WorkspacesCreateWorkspaceRequest$outboundSchema: z.ZodType<
  V1WorkspacesCreateWorkspaceRequest$Outbound,
  z.ZodTypeDef,
  V1WorkspacesCreateWorkspaceRequest
> = z.object({
  organizationId: z.string(),
  workspaceCreateRequestDTO: models.WorkspaceCreateRequestDTO$outboundSchema,
}).transform((v) => {
  return remap$(v, {
    workspaceCreateRequestDTO: "WorkspaceCreateRequestDTO",
  });
});

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1WorkspacesCreateWorkspaceRequest$ {
  /** @deprecated use `V1WorkspacesCreateWorkspaceRequest$inboundSchema` instead. */
  export const inboundSchema = V1WorkspacesCreateWorkspaceRequest$inboundSchema;
  /** @deprecated use `V1WorkspacesCreateWorkspaceRequest$outboundSchema` instead. */
  export const outboundSchema =
    V1WorkspacesCreateWorkspaceRequest$outboundSchema;
  /** @deprecated use `V1WorkspacesCreateWorkspaceRequest$Outbound` instead. */
  export type Outbound = V1WorkspacesCreateWorkspaceRequest$Outbound;
}

export function v1WorkspacesCreateWorkspaceRequestToJSON(
  v1WorkspacesCreateWorkspaceRequest: V1WorkspacesCreateWorkspaceRequest,
): string {
  return JSON.stringify(
    V1WorkspacesCreateWorkspaceRequest$outboundSchema.parse(
      v1WorkspacesCreateWorkspaceRequest,
    ),
  );
}

export function v1WorkspacesCreateWorkspaceRequestFromJSON(
  jsonString: string,
): SafeParseResult<V1WorkspacesCreateWorkspaceRequest, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      V1WorkspacesCreateWorkspaceRequest$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1WorkspacesCreateWorkspaceRequest' from JSON`,
  );
}

/** @internal */
export const V1WorkspacesCreateWorkspaceResponse$inboundSchema: z.ZodType<
  V1WorkspacesCreateWorkspaceResponse,
  z.ZodTypeDef,
  unknown
> = z.union([
  models.WorkspaceSchema$inboundSchema,
  models.DefaultErrorDTO$inboundSchema,
]);

/** @internal */
export type V1WorkspacesCreateWorkspaceResponse$Outbound =
  | models.WorkspaceSchema$Outbound
  | models.DefaultErrorDTO$Outbound;

/** @internal */
export const V1WorkspacesCreateWorkspaceResponse$outboundSchema: z.ZodType<
  V1WorkspacesCreateWorkspaceResponse$Outbound,
  z.ZodTypeDef,
  V1WorkspacesCreateWorkspaceResponse
> = z.union([
  models.WorkspaceSchema$outboundSchema,
  models.DefaultErrorDTO$outboundSchema,
]);

/**
 * @internal
 * @deprecated This namespace will be removed in future versions. Use schemas and types that are exported directly from this module.
 */
export namespace V1WorkspacesCreateWorkspaceResponse$ {
  /** @deprecated use `V1WorkspacesCreateWorkspaceResponse$inboundSchema` instead. */
  export const inboundSchema =
    V1WorkspacesCreateWorkspaceResponse$inboundSchema;
  /** @deprecated use `V1WorkspacesCreateWorkspaceResponse$outboundSchema` instead. */
  export const outboundSchema =
    V1WorkspacesCreateWorkspaceResponse$outboundSchema;
  /** @deprecated use `V1WorkspacesCreateWorkspaceResponse$Outbound` instead. */
  export type Outbound = V1WorkspacesCreateWorkspaceResponse$Outbound;
}

export function v1WorkspacesCreateWorkspaceResponseToJSON(
  v1WorkspacesCreateWorkspaceResponse: V1WorkspacesCreateWorkspaceResponse,
): string {
  return JSON.stringify(
    V1WorkspacesCreateWorkspaceResponse$outboundSchema.parse(
      v1WorkspacesCreateWorkspaceResponse,
    ),
  );
}

export function v1WorkspacesCreateWorkspaceResponseFromJSON(
  jsonString: string,
): SafeParseResult<V1WorkspacesCreateWorkspaceResponse, SDKValidationError> {
  return safeParse(
    jsonString,
    (x) =>
      V1WorkspacesCreateWorkspaceResponse$inboundSchema.parse(JSON.parse(x)),
    `Failed to parse 'V1WorkspacesCreateWorkspaceResponse' from JSON`,
  );
}
